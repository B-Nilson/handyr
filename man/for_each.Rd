% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/for_each.R
\name{for_each}
\alias{for_each}
\title{Loop over a vector and apply a function with useful postprocessing}
\usage{
for_each(
  input,
  FUN,
  ...,
  .bind = FALSE,
  .name = FALSE,
  .parallel = FALSE,
  .workers = parallel::detectCores(),
  .invisible = FALSE
)
}
\arguments{
\item{input}{A vector of values to be iterated over.}

\item{FUN}{A function to be applied to each value in \code{input}.}

\item{...}{Any other arguments to be passed to \code{FUN} or to \code{\link[future.apply:future_lapply]{future.apply::future_lapply()}} if \code{.parallel = TRUE}.}

\item{.bind}{(Optional) A single logical (TRUE/FALSE) value indicating if the output should be bound rowwise.
Default is \code{FALSE}}

\item{.name}{(Optional) A single logical (TRUE/FALSE) value indicating if the output should be named after the input.
Default is \code{FALSE}}

\item{.parallel}{(Optional) A single logical (TRUE/FALSE) value indicating if the function should be run in parallel (see \code{\link[future:multisession]{future::multisession()}}).
Default is \code{FALSE}}

\item{.workers}{(Optional) A single numeric value indicating the number of workers to run in parallel.
Default is all available cores (see \code{\link[parallel:detectCores]{parallel::detectCores()}})}

\item{.invisible}{(Optional) A single logical (TRUE/FALSE) value indicating if the output should be invisible (no messages/warnings).}
}
\value{
the output of \code{FUN} iterated over \code{input}, optionally bound rowwise, named after \code{input}, or invisible.
}
\description{
\code{for_each} provides a simple way to loop over a vector and apply a function with useful postprocessing.
}
\examples{
values <- 1:3
values |> for_each(\(value) value + 1)

list(
  data.frame(x = 1:3),
  data.frame(x = 4:6)
) |>
  for_each(
    \(dat) dat |> dplyr::mutate(y = x + 1),
    .bind = TRUE
  )

c("bread", "jam") |>
  for_each(
    \(value) paste("eat", value),
    .name = TRUE
  )

values <- 1:3 |>
  for_each(\(value) value + 1, .parallel = TRUE, .workers = 2)

values <- 1:3 |>
  for_each(\(value) message(value + 1), .invisible = TRUE)
}
\seealso{
Other Utilities: 
\code{\link{on_error}()},
\code{\link{swap}()}
}
\concept{Utilities}
