% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/log_step.R
\name{log_step}
\alias{log_step}
\title{Log a message for script progress tracking}
\usage{
log_step(
  ...,
  header = FALSE,
  time = !header,
  time_format = "\%Y-\%m-\%d \%H:\%M:\%S",
  tz = Sys.timezone(),
  quiet = FALSE,
  sep = " "
)
}
\arguments{
\item{...}{One or more character (or coercible to) values or vectors of messages.
If more than one message is provided, they will be combined with \code{paste(collapse = sep)}}

\item{header}{A logical value indicating if the message should be formatted as a header ("|--- message ---|")
Default is \code{FALSE}}

\item{time}{A logical value indicating if the current time should be prepended to the log message.
Default is the opposite of \code{header}}

\item{time_format}{A character value indicating the format of the timestamp.
See \code{\link[base:strptime]{base::strptime()}} for formating details.
Default is "\%Y-\%m-\%d \%H:\%M:\%S" (YYYY-MM-DD HH:MM:SS).}

\item{tz}{A character value indicating the time zone to use for the timestamp.
Default is \code{\link[base:timezones]{base::Sys.timezone()}}.}

\item{quiet}{A logical value indicating if the message should not be printed using \code{\link[base:message]{base::message()}}.
Default is \code{FALSE}.}

\item{sep}{A character value indicating the separator to use between messages when combined if multiple messages are provided.
Default is " ".}
}
\value{
an invisible list with the timestamp (POSIXct), output message (character), and original message (character).
If \code{header == TRUE} the return is wrapped with \code{list(.log_init = {...})} to aid in tracking for \code{\link[=summarise_logs]{summarise_logs()}}
}
\description{
Log a message for script progress tracking
}
\examples{
logs <- log_step("My Awesome Script", time = FALSE, header = TRUE)
logs$step_1 <- log_step("Step 1...")
# Do something
logs$step_two <- log_step("Step-", 2, "...", sep = "")
# Do something else
logs$done <- log_step("Complete")
# Summarise run times and save log to file
summarise_logs(logs, save_to = tempfile())
}
