% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_database.R
\name{create_database}
\alias{create_database}
\title{Create a file-based database}
\usage{
create_database(
  name,
  type = NULL,
  path = NULL,
  version = NULL,
  credentials = c("USER", "PASSWORD"),
  port = 5432,
  return_connection = TRUE
)
}
\arguments{
\item{name}{The name of (and optionally path to) the database to create.
If the file extension does not match the type, it will be added.}

\item{type}{The type of database to create.
If NULL (the default), the type will be derived from \code{name}, defaulting to "sqlite".}

\item{path}{The location to save the database file to.
If NULL (the default), the path will be derived from \code{name}, defaulting to the current working directory.}

\item{version}{The version of the database to create. Currently only used for \code{type = "postgresql"}.
Default is \code{NULL} which uses \code{"17.0-1"}.}

\item{credentials}{A vector of length 2 containing the username and password for the database.
Currently only used for \code{type = "postgresql"}.
Default is \code{c("USER", "PASSWORD")}.}

\item{port}{The port to use for the database server. Currently only used for \code{type = "postgresql"}.
Default is \code{5432}.}

\item{return_connection}{A logical value indicating whether to return the database connection instead of the path to the database file.
Default is \code{TRUE}.}
}
\description{
This function creates a new database using either sqlite or duckdb.
See \code{\link[DBI:dbConnect]{DBI::dbConnect()}} for more details.
}
