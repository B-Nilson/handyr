[{"path":[]},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement nilson.brayden@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://b-nilson.github.io/handyr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://b-nilson.github.io/handyr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to handyr","title":"Contributing to handyr","text":"outlines propose change handyr. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://b-nilson.github.io/handyr/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to handyr","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://b-nilson.github.io/handyr/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to handyr","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://b-nilson.github.io/handyr/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to handyr","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"B-Nilson/handyr\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://b-nilson.github.io/handyr/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to handyr","text":"New code follow tidyverse style guide. can use Air apply style, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://b-nilson.github.io/handyr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to handyr","text":"Please note handyr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://b-nilson.github.io/handyr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 handyr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://b-nilson.github.io/handyr/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with handyr","title":"Getting help with handyr","text":"Thanks using handyr! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://b-nilson.github.io/handyr/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with handyr","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://b-nilson.github.io/handyr/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with handyr","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://b-nilson.github.io/handyr/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with handyr","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://b-nilson.github.io/handyr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brayden Nilson. Author, maintainer.","code":""},{"path":"https://b-nilson.github.io/handyr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nilson B (2025). handyr: Generally useful functions. R package version 0.0.0.9000, https://github.com/B-Nilson/handyr.","code":"@Manual{,   title = {handyr: Generally useful functions},   author = {Brayden Nilson},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/B-Nilson/handyr}, }"},{"path":"https://b-nilson.github.io/handyr/index.html","id":"handyr-","dir":"","previous_headings":"","what":"Generally useful functions","title":"Generally useful functions","text":"goal handyr streamline common datascience tasks wrappers around various handy packages consistent style.","code":""},{"path":"https://b-nilson.github.io/handyr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generally useful functions","text":"can install development version handyr GitHub :","code":"# install.packages(\"pak\") pak::pak(\"B-Nilson/handyr\")"},{"path":[]},{"path":"https://b-nilson.github.io/handyr/index.html","id":"create-and-writereaddelete-from-databases","dir":"","previous_headings":"Examples","what":"Create and write/read/delete from Databases","title":"Generally useful functions","text":"","code":"library(handyr)  # Create a file-based database (or setup postgresql server if on Windows) db <- create_database(\"test\", type = \"sqlite\") # or type = \"duckdb\" # or type = \"postgresql\" (if on Windows)  # Write data to an existing database db |>    write_to_database(     new_data = datasets::airquality,     table_name = \"airquality\",     primary_keys = c(\"Month\", \"Day\"),     insert_new = TRUE, # set to FALSE to ignore entries not already in db     update_duplicates = FALSE # set to TRUE to update existing entries in db where overlap exists   )  # Read data from a database, leverage dplyr for common sql queries db |>   read_from_database(     table_name = \"airquality\",     query_fun = \\(df) df |> dplyr::filter(Month == 5, Day == 5),     # Set to FALSE to return a lazy tbl of the query instead of loading full results into memory     collect = TRUE    )  # Delete matching entries in a database table db |>   delete_database_entries(     table_name = \"airquality\",     entry_keys = data.frame(Month = 5, Day = 5:8)   )"},{"path":"https://b-nilson.github.io/handyr/index.html","id":"recordlog-steps-in-a-workflow","dir":"","previous_headings":"Examples","what":"Record/log Steps in a Workflow","title":"Generally useful functions","text":"","code":"library(handyr)  # Initiate logging entry logs = list(log_step(\"handyr Examples\", header = TRUE, time = FALSE))  # Then log each step logs$something <- log_step(\"doing something\")  # do something   # End logging logs$complete <- log_step(\"done\")  # Summarise logs timing summarise_logs(logs)"},{"path":"https://b-nilson.github.io/handyr/index.html","id":"forget-about-for-loops","dir":"","previous_headings":"Examples","what":"Forget about for loops","title":"Generally useful functions","text":"","code":"# TODO: examples showcasing for_each"},{"path":"https://b-nilson.github.io/handyr/index.html","id":"spatial--temporal-data-manipulation","dir":"","previous_headings":"Examples","what":"Spatial / Temporal Data Manipulation","title":"Generally useful functions","text":"","code":"# Local timezone lookup get_timezone(lng = -105.053144, lat = 69.116178)  # Detailed season description c(Sys.time() - 10^7, Sys.time()) |>   get_season(as_factor = TRUE, include_year = TRUE, include_months = TRUE)  # Split large date ranges into specific-size chunks c(Sys.time() - 10^8, Sys.time()) |>   split_date_range(max_duration = \"120 days\")  # Get most likely data interval (useful for when occasional gaps may exist) get_interval(c(1:10, 12, 14, 16:20)  # Convert sf objects back to data frames cleanly cities <- data.frame(     name = c(\"Nanaimo\", \"Port Moody\", \"Prince George\"),     x = c(-124.0531, -122.8519, -122.7949),     y = c(49.1633, 49.2844, 53.8934)   ) cities_sf <- cities |>   sf::st_as_sf(coords = c(\"x\", \"y\"), crs = \"WGS84\") sf_as_df(cities_sf)  # Or just get the x/y coordinates as a data.frame extract_sf_coords(cities_sf)"},{"path":"https://b-nilson.github.io/handyr/index.html","id":"miscellaneous-quality-of-life-improvments","dir":"","previous_headings":"Examples","what":"Miscellaneous Quality of Life Improvments","title":"Generally useful functions","text":"","code":"library(handyr)  # Vector operations x <- c(1:10 + 0.123, NA) |>   clamp(range = c(2, 9)) |> # replace values outside range with nearest value   swap(2, with = NA) |> # swap out all \"2\"s with NA   rolling(\"mean\", width = 3, direction = \"backwards\", .min_non_na = 2) |> # 3-point (fast) rolling mean   truncate(digits = 1) |> # drop all digits after the first   convert_units(from = \"m\", to = \"km\") |> # convert from metres to kilometres   max(na.rm = TRUE) # take the max (or `min()` or `mode()`) with consistent NA handling  # Error handling load_your_data <- function(x) {   if(x %in% c(2, 4)) {     stop(\"Something went wrong\") # simulate file not existing or some other error   } else{     data.frame(x = x, y = x^2) # simulate data being loaded in   }  } your_data <- 1:5 |> for_each(   # Capture error, convert to warning, return NULL, keep going   # or use a custom warning message instead (i.e. `.warn = \"Failed to load data.\"`)   \\(x) load_your_data(x) |> on_error(.return = NULL, .warn = TRUE)   .bind = TRUE )  # TODO: showcase join_list, do_if, save_figure, silence # TODO: showcase max/min NA handling improvements # TODO: showcase rolling built-ins speed improvements"},{"path":"https://b-nilson.github.io/handyr/reference/check_date_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that a vector of two dates within a specified date range — check_date_range","title":"Check that a vector of two dates within a specified date range — check_date_range","text":"check_date_range useful checking date range within specified date range, provides quick ways generate date ranges using \"now\" \"YYYY-MM-DD HH\" format dates.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/check_date_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that a vector of two dates within a specified date range — check_date_range","text":"","code":"check_date_range(   date_range = \"now\",   within = c(NA, NA),   tz = \"UTC\",   now_time_step = \"1 hours\" )"},{"path":"https://b-nilson.github.io/handyr/reference/check_date_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that a vector of two dates within a specified date range — check_date_range","text":"date_range, within vector 1 2 dates, datetimes, characters (formatted \"YYYY-MM-DD HH:MM:SS\" timezone tz \"now\" current time) representing start end : input date_range maximum allowed date range (within). NA values replaced 1970-01-01 \"now\" first second values, respectively. Default date_range \"now\". Default within c(NA, NA) - equivalent c(\"1970-01-01 00\", \"now\") tz character string representing time zone use output. now_time_step character string representing time step use generating current time within fully specified. Passed lubridate::floor_date().","code":""},{"path":"https://b-nilson.github.io/handyr/reference/check_date_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that a vector of two dates within a specified date range — check_date_range","text":"length-2 vector Dates POSIXcts representing start end date range.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/clamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace out-of-range values with the nearest in-range value — clamp","title":"Replace out-of-range values with the nearest in-range value — clamp","text":"clamp sets values less min(range) min(range) values greater max(range) max(range)","code":""},{"path":"https://b-nilson.github.io/handyr/reference/clamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace out-of-range values with the nearest in-range value — clamp","text":"","code":"clamp(x, range = c(NA, NA))"},{"path":"https://b-nilson.github.io/handyr/reference/clamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace out-of-range values with the nearest in-range value — clamp","text":"x numeric vector. range numeric vector length two clamp x . range[1] NA (default), min(x) used. range[2] NA (default), max(x) used.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/clamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace out-of-range values with the nearest in-range value — clamp","text":"numeric vector equal x : values less min(range) set min(range) values greater max(range) set max(range)","code":""},{"path":"https://b-nilson.github.io/handyr/reference/clamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace out-of-range values with the nearest in-range value — clamp","text":"","code":"clamp(1:5, range = c(2, NA)) # 2, 2, 3, 4, 5 #> [1] 2 2 3 4 5 clamp(1:5, range = c(2, 4)) # 2, 2, 3, 4, 4 #> [1] 2 2 3 4 4 clamp(1:5, range = c(-1, 1)) # 1, 1, 1, 1, 1 #> [1] 1 1 1 1 1"},{"path":"https://b-nilson.github.io/handyr/reference/convert_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between common units — convert_units","title":"Convert between common units — convert_units","text":"convert_units wrapper around units::set_units() switch common measurement units.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/convert_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between common units — convert_units","text":"","code":"convert_units(x, from, to, keep_units = FALSE, ...)"},{"path":"https://b-nilson.github.io/handyr/reference/convert_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between common units — convert_units","text":"x numeric vector. , string indicating current/desired unit x. Run units::valid_udunits() list valid units system. keep_units logical value indicating whether keep units conversion (default FALSE). ... Additional arguments passed units::set_units()","code":""},{"path":"https://b-nilson.github.io/handyr/reference/convert_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between common units — convert_units","text":"numeric vector length/type x. keep_units = TRUE, units attribute preserved","code":""},{"path":"https://b-nilson.github.io/handyr/reference/convert_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between common units — convert_units","text":"","code":"convert_units(c(1, 2, 3), from = \"cm\", to = \"km\") #> [1] 1e-05 2e-05 3e-05 convert_units(c(1, 2, 3), from = \"degF\", to = \"degC\") #> [1] -17.22222 -16.66667 -16.11111 convert_units(c(1, 2, 3), from = \"ft\", to = \"m\") #> [1] 0.3048 0.6096 0.9144 convert_units(c(1, 2, 3), from = \"oz\", to = \"L\") #> [1] 0.02957353 0.05914706 0.08872059 convert_units(c(1, 2, 3), from = \"m/s\", to = \"km/h\") #> [1]  3.6  7.2 10.8 convert_units(c(1, 2, 3), from = \"ug/m3\", to = \"mg/km3\") #> [1] 1e+06 2e+06 3e+06"},{"path":"https://b-nilson.github.io/handyr/reference/create_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a file-based database — create_database","title":"Create a file-based database — create_database","text":"function creates new database using either sqlite duckdb. See DBI::dbConnect() details.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/create_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a file-based database — create_database","text":"","code":"create_database(   name,   type = NULL,   path = NULL,   version = NULL,   credentials = c(\"USER\", \"PASSWORD\"),   port = 5432,   return_connection = TRUE )"},{"path":"https://b-nilson.github.io/handyr/reference/create_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a file-based database — create_database","text":"name name (optionally path ) database create. file extension match type, added. type type database create. NULL (default), type derived name, defaulting \"sqlite\". path location save database file . NULL (default), path derived name, defaulting current working directory. version version database create. Currently used type = \"postgresql\". Default NULL uses \"17.0-1\". credentials vector length 2 containing username password database. Currently used type = \"postgresql\". Default c(\"USER\", \"PASSWORD\"). port port use database server. Currently used type = \"postgresql\". Default 5432. return_connection logical value indicating whether return database connection instead path database file. Default TRUE.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/delete_database_entries.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete specific entries from a database table. — delete_database_entries","title":"Delete specific entries from a database table. — delete_database_entries","text":"Delete specific entries database table.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/delete_database_entries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete specific entries from a database table. — delete_database_entries","text":"","code":"delete_database_entries(db, table_name, entry_keys)"},{"path":"https://b-nilson.github.io/handyr/reference/delete_database_entries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete specific entries from a database table. — delete_database_entries","text":"db database connection path database file (sqlite duckdb file extension). table_name name table delete entries . entry_keys data frame named vector names matching table entries equal rows delete.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/do_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function if a condition is met — do_if","title":"Apply a function if a condition is met — do_if","text":"Apply function condition met","code":""},{"path":"https://b-nilson.github.io/handyr/reference/do_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function if a condition is met — do_if","text":"","code":"do_if(x, .do, .if = TRUE, ..., .return = NA)"},{"path":"https://b-nilson.github.io/handyr/reference/do_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function if a condition is met — do_if","text":"x Something .can applied . .function applied x. .logical value indicating .applied . ... Additional arguments passed .. .return return instead output ..== FALSE.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/do_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function if a condition is met — do_if","text":"output .applied x .== TRUE, .return otherwise","code":""},{"path":"https://b-nilson.github.io/handyr/reference/do_if.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function if a condition is met — do_if","text":"","code":"c(1, 2, 3) |> do_if(.do = mean, .if = TRUE) #> [1] 2 c(1, 2, 3) |> do_if(.do = mean, .if = FALSE) #> [1] NA c(1, 2, 3) |> do_if(.do = mean, .if = FALSE, .return = -1) #> [1] -1"},{"path":"https://b-nilson.github.io/handyr/reference/do_if_enough.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function if enough values are non-NA — do_if_enough","title":"Apply a function if enough values are non-NA — do_if_enough","text":"do_if_enough: checks enough non-NA values x. (see .min_non_na) , applies function (FUN) x. , returns .return. (see do_if() details)","code":""},{"path":"https://b-nilson.github.io/handyr/reference/do_if_enough.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function if enough values are non-NA — do_if_enough","text":"","code":"do_if_enough(x, FUN, ..., .min_non_na = 1, .return = NA)"},{"path":"https://b-nilson.github.io/handyr/reference/do_if_enough.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function if enough values are non-NA — do_if_enough","text":"x vector (numeric, character, etc). FUN function applied x. ... Additional arguments passed FUN. .min_non_na minimum length x (ignoring NAs) considered enough. .return return instead output FUN enough non-NA values.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/do_if_enough.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function if enough values are non-NA — do_if_enough","text":"output FUN applied x enough values provided, .return otherwise","code":""},{"path":"https://b-nilson.github.io/handyr/reference/do_if_enough.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function if enough values are non-NA — do_if_enough","text":"","code":"do_if_enough(c(1, 2, 3), mean, .min_non_na = 2) #> [1] 2 do_if_enough(c(1, 2, NA), mean, .min_non_na = 2) #> [1] 1.5 do_if_enough(c(1, NA, NA), mean, .min_non_na = 2) #> [1] NA do_if_enough(c(1, NA, NA), mean, .min_non_na = 2, .return = -1) #> [1] -1"},{"path":"https://b-nilson.github.io/handyr/reference/extract_sf_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sf coordinates and crs as columns — extract_sf_coords","title":"Add sf coordinates and crs as columns — extract_sf_coords","text":"extract_sf_coords adds x y coordinates crs additional columns sf object, option convert data.frame.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/extract_sf_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sf coordinates and crs as columns — extract_sf_coords","text":"","code":"extract_sf_coords(sf_obj, keep_sf = TRUE, add_crs = TRUE)"},{"path":"https://b-nilson.github.io/handyr/reference/extract_sf_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sf coordinates and crs as columns — extract_sf_coords","text":"sf_obj object class sf, typically created sf::st_as_sf() keep_sf logical value indicating return object remain sf object converted data.frame add_crs logical value indicating crs added column","code":""},{"path":"https://b-nilson.github.io/handyr/reference/extract_sf_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add sf coordinates and crs as columns — extract_sf_coords","text":"keep_sf : TRUE sf_obj two additional numeric columns (x y) character column (crs). FALSE: , converted data.frame","code":""},{"path":"https://b-nilson.github.io/handyr/reference/extract_sf_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add sf coordinates and crs as columns — extract_sf_coords","text":"","code":"cities <- data.frame(   name = c(\"Nanaimo\", \"Port Moody\", \"Prince George\"),   x = c(-124.0531, -122.8519, -122.7949),   y = c(49.1633, 49.2844, 53.8934) ) cities_sf <- cities |>   sf::st_as_sf(coords = c(\"x\", \"y\"), crs = \"WGS84\") cities_sf |>   extract_sf_coords() #> Simple feature collection with 3 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -124.0531 ymin: 49.1633 xmax: -122.7949 ymax: 53.8934 #> Geodetic CRS:  WGS 84 #>            name                  geometry         x       y   crs #> 1       Nanaimo POINT (-124.0531 49.1633) -124.0531 49.1633 WGS84 #> 2    Port Moody POINT (-122.8519 49.2844) -122.8519 49.2844 WGS84 #> 3 Prince George POINT (-122.7949 53.8934) -122.7949 53.8934 WGS84"},{"path":"https://b-nilson.github.io/handyr/reference/for_each.html","id":null,"dir":"Reference","previous_headings":"","what":"Loop over a vector-like object and apply a function — for_each","title":"Loop over a vector-like object and apply a function — for_each","text":"for_each provides simple way loop vector apply function useful postprocessing.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/for_each.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loop over a vector-like object and apply a function — for_each","text":"","code":"for_each(   x,   FUN,   ...,   .enumerate = FALSE,   .bind = FALSE,   .bind_id = NULL,   .join = FALSE,   .join_by = NULL,   .join_mode = \"full\",   .name = FALSE,   .as_list = NULL,   .parallel = FALSE,   .workers = NULL,   .plan = \"multisession\",   .parallel_cleanup = TRUE,   .show_progress = !.quiet,   .quiet = FALSE )"},{"path":"https://b-nilson.github.io/handyr/reference/for_each.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loop over a vector-like object and apply a function — for_each","text":"x Something iterable (vector, list, etc). FUN function applied entry x. ... Additional arguments passed FUN future.apply::future_lapply() .parallel = TRUE. .enumerate logical value indicating passed FUN alongside x. Default FALSE. TRUE, FUN run FUN(x[[]], , ...), index values x. .bind logical value indicating whether apply dplyr::bind_rows(). Default FALSE .bind_id single character string indicating column name use row index .bind = TRUE. Default NULL (add row index column). .join logical value indicating output joined using join_list(). Default FALSE. .join_by One character values indicating column name(s) join .join = TRUE. Default NULL, joins matching columns. .join_mode character string specifying type join perform .join = TRUE. Must one \"full\", \"inner\", \"left\", \"right\", ... (see join_list() options). Default \"full\", uses dplyr::full_join(). .name logical value indicating output named x. (.e names() <- x) Default FALSE. .as_list logical value indicating output list (see lapply() / future.apply::future_lapply()) vector (seesapply() / future.apply::future_sapply()). Default NULL, FALSE x vector, TRUE otherwise. .parallel logical value indicating function run parallel (see future::multisession()). Default FALSE. .workers single numeric value indicating number workers run parallel .parallel = TRUE. Default NULL uses available cores (see parallel::detectCores()). existing plan set type .plan, argument ignored. .plan string indicating strategy use .parallel = TRUE. Default \"multisession\" (see future::plan()). .parallel = FALSE, argument ignored. existing plan set type, argument ignored. .parallel_cleanup logical value indicating parallel plan reset sequential using future::plan(\"sequential\") .parallel = TRUE. Default TRUE. .show_progress logical value indicating progress bar (see pbapply::pbsapply()) shown .parallel = TRUE. Default !.quiet. .quiet logical value indicating output invisible (messages/warnings). Default FALSE.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/for_each.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loop over a vector-like object and apply a function — for_each","text":"list output FUN iterated x : .bind = TRUE: bound rowwise data frame using dplyr::bind_rows() .name = TRUE: names set x using names() <- x .quiet = TRUE: invisible","code":""},{"path":"https://b-nilson.github.io/handyr/reference/for_each.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loop over a vector-like object and apply a function — for_each","text":"","code":"1:3 |> for_each(\\(value) value + 1) #> [1] 2 3 4 c(7, 7, 7) |> for_each(\\(value, i) value + i, .enumerate = TRUE) #> [1]  8  9 10  list(   data.frame(x = 1:3),   data.frame(x = 4:6) ) |>   for_each(     \\(dat) dat |> dplyr::mutate(y = x + 1),     .bind = TRUE   ) #>   x y #> 1 1 2 #> 2 2 3 #> 3 3 4 #> 4 4 5 #> 5 5 6 #> 6 6 7  c(\"bread\", \"jam\") |>   for_each(     \\(value) paste(\"eat\", value),     .name = TRUE   ) #>       bread         jam  #> \"eat bread\"   \"eat jam\"   values <- 1:3 |>   for_each(\\(value) value + 1, .parallel = TRUE, .workers = 2, .as_list = TRUE)  values <- 1:3 |>   for_each(\\(value) message(value + 1), .quiet = TRUE)"},{"path":"https://b-nilson.github.io/handyr/reference/get_communities.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a communities within a region from OpenStreetMap — get_communities","title":"Get a communities within a region from OpenStreetMap — get_communities","text":"Get communities within region OpenStreetMap","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_communities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a communities within a region from OpenStreetMap — get_communities","text":"","code":"get_communities(   bbox,   types = c(\"city\", \"town\", \"village\", \"hamlet\"),   timeout = 600,   quiet = TRUE )"},{"path":"https://b-nilson.github.io/handyr/reference/get_communities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a communities within a region from OpenStreetMap — get_communities","text":"bbox Usually name area (ie. \"Fort St. John, BC\"). See osmdata::getbb() information. types character vector types communities search . Default c(\"city\", \"town\", \"village\", \"hamlet\"). See https://wiki.openstreetmap.org/wiki/Key:place. timeout time seconds wait response OSM API. Default 600 seconds. quiet logical value indicating whether non-critical warnings/messages suppressed. Default TRUE.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_communities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a communities within a region from OpenStreetMap — get_communities","text":"sf data frame containing communities bounding box columns \"osm_id\", \"type\" (community type), \"name\", \"population\"/\"population_source\" (available), \"geometry\".","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_communities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a communities within a region from OpenStreetMap — get_communities","text":"","code":"get_communities(\"Fort St. John, BC\") #> Error in httr2::req_perform(req): HTTP 504 Gateway Timeout.  get_communities(\"Yukon, Canada\") #> Error in httr2::req_perform(req): HTTP 504 Gateway Timeout."},{"path":"https://b-nilson.github.io/handyr/reference/get_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine distance(s) between values — get_interval","title":"Determine distance(s) between values — get_interval","text":"get_interval finds common interval vector. multiple intervals frequency, takes first one sorted vector warning raised.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine distance(s) between values — get_interval","text":"","code":"get_interval(x, most_common = TRUE, na.rm = FALSE, quiet = FALSE)"},{"path":"https://b-nilson.github.io/handyr/reference/get_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine distance(s) between values — get_interval","text":"x numeric, Date, POSIXt, POSIXct vector. most_common logical value indicating whether common interval (default) returned intervals frequencies sorted data frame. na.rm logical value indicating whether NAs removed calculating interval frequencies. Default FALSE. quiet logical value indicating whether warnings suppressed output invisible. Default FALSE.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_interval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine distance(s) between values — get_interval","text":"most_common = TRUE (default), single numeric difftime value. most_common = FALSE, sorted data frame columns interval (numeric difftime) frequency (integer).","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_interval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine distance(s) between values — get_interval","text":"","code":"get_interval(c(1, 3, 5:10)) #> [1] 1 get_interval(as.Date(c(\"2020-01-01\", \"2020-01-03\", \"2020-01-05\", \"2020-01-06\"))) #> Time difference of 2 days get_interval(as.POSIXct(c(\"2020-01-01 00:00:00\", \"2020-01-01 00:00:02\", \"2020-01-01 00:00:04\"))) #> Time difference of 2 secs get_interval(c(0, 3, 5, 7:10), most_common = FALSE) #>   interval frequency #> 1        1         3 #> 2        2         2 #> 3        3         1"},{"path":"https://b-nilson.github.io/handyr/reference/get_season.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the season from a date — get_season","title":"Get the season from a date — get_season","text":"get_season takes date (set dates) returns corresponding season(s).","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the season from a date — get_season","text":"","code":"get_season(   dates = Sys.time(),   as_factor = FALSE,   include_year = FALSE,   include_months = FALSE,   use_autumn = FALSE )"},{"path":"https://b-nilson.github.io/handyr/reference/get_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the season from a date — get_season","text":"dates Date POSIXct vector dates get season . Defaults Sys.time(). as_factor logical indicating whether output factor character vector. Defaults FALSE. include_year logical indicating whether output include year season . Defaults FALSE. include_months logical indicating whether output include months season . Defaults FALSE. use_autumn logical indicating whether \"Autumn\" used instead \"Fall\". Defaults FALSE.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the season from a date — get_season","text":"as_factor = FALSE (default), character vector season(s) optionally year/months. as_factor = TRUE, factor chronological levels.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_timezone.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup timezones of latitude/longitude pairs — get_timezone","title":"Lookup timezones of latitude/longitude pairs — get_timezone","text":"get_timezone uses lutz package lookup timezone locations lat/lng coords. See lutz::tz_lookup_coords details.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_timezone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup timezones of latitude/longitude pairs — get_timezone","text":"","code":"get_timezone(lng, lat, method = \"accurate\", quiet = FALSE, ...)"},{"path":"https://b-nilson.github.io/handyr/reference/get_timezone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup timezones of latitude/longitude pairs — get_timezone","text":"lng, lat Numeric longitude/latitude pairs (decimal degrees). method either \"accurate\" \"fast\",  indicating lookup method use. See lutz::tz_lookup_coords details. Set .quiet TRUE suppress warning produced method = \"fast\". quiet logical value indicating messages warnings suppressed. ... Additional parameters pass lutz::tz_lookup_coords (currently unused)","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_timezone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup timezones of latitude/longitude pairs — get_timezone","text":"character vector length lat lng indicating locations likely timezone. See lutz::tz_lookup_coords details.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/get_timezone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup timezones of latitude/longitude pairs — get_timezone","text":"","code":"get_timezone(lng = -105.053144, lat = 69.116178, method = \"accurate\") #> [1] \"America/Cambridge_Bay\" get_timezone(lng = c(-105.053144, -106.053144), lat = c(69.116178, 49.116178), method = \"fast\") #> Warning: Using 'fast' method. This can cause inaccuracies in time zones #>   near boundaries away from populated ares. Use the 'accurate' #>   method if accuracy is more important than speed. #> [1] \"America/Cambridge_Bay\" \"America/Regina\""},{"path":"https://b-nilson.github.io/handyr/reference/join_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Join a list of data frames — join_list","title":"Join a list of data frames — join_list","text":"join_list takes list data frames joins together using specified join type.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/join_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join a list of data frames — join_list","text":"","code":"join_list(df_list, by = NULL, mode = \"full\")"},{"path":"https://b-nilson.github.io/handyr/reference/join_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join a list of data frames — join_list","text":"df_list list data frames. character vector column names join . Default (NULL) joins matching columns. mode character string specifying type join perform. Must one \"full\", \"inner\", \"left\", \"right\", ... (see dplyr::join).","code":""},{"path":"https://b-nilson.github.io/handyr/reference/join_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join a list of data frames — join_list","text":"single data frame containing joined data.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/log_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Log a message for script progress tracking — log_step","title":"Log a message for script progress tracking — log_step","text":"Log message script progress tracking","code":""},{"path":"https://b-nilson.github.io/handyr/reference/log_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log a message for script progress tracking — log_step","text":"","code":"log_step(   ...,   header = FALSE,   time = !header,   time_format = \"%Y-%m-%d %H:%M:%S\",   tz = Sys.timezone(),   quiet = FALSE,   sep = \" \" )"},{"path":"https://b-nilson.github.io/handyr/reference/log_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log a message for script progress tracking — log_step","text":"... One character (coercible ) values vectors messages. one message provided, combined paste(collapse = sep) header logical value indicating message formatted header (\"|— message —|\") Default FALSE time logical value indicating current time prepended log message. Default opposite header time_format character value indicating format timestamp. See base::strptime() formating details. Default \"%Y-%m-%d %H:%M:%S\" (YYYY-MM-DD HH:MM:SS). tz character value indicating time zone use timestamp. Default base::Sys.timezone(). quiet logical value indicating message printed using base::message(). Default FALSE. sep character value indicating separator use messages combined multiple messages provided. Default \" \".","code":""},{"path":"https://b-nilson.github.io/handyr/reference/log_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log a message for script progress tracking — log_step","text":"invisible list timestamp (POSIXct), output message (character), original message (character). header == TRUE return wrapped list(.log_init = {...}) aid tracking summarise_logs()","code":""},{"path":"https://b-nilson.github.io/handyr/reference/log_step.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log a message for script progress tracking — log_step","text":"","code":"logs <- log_step(\"My Awesome Script\", time = FALSE, header = TRUE) #> |--------------------   My Awesome Script   --------------------| logs$step_1 <- log_step(\"Step 1...\") #> 2025-10-28 17:38:33: Step 1... # Do something logs$step_two <- log_step(\"Step-\", 2, \"...\", sep = \"\") #> 2025-10-28 17:38:33: Step-2... # Do something else logs$done <- log_step(\"Complete\") #> 2025-10-28 17:38:33: Complete # Summarise run times and save log to file summarise_logs(logs, save_to = tempfile()) #>  #> Total time: 0ms  #> --> Step 1...: 0ms #> --> Step-2...: 0ms"},{"path":"https://b-nilson.github.io/handyr/reference/max.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the maximum/minimum value while handling NAs cleanly — max","title":"Get the maximum/minimum value while handling NAs cleanly — max","text":"max/min provides wrapper built-functions base::max/base::min handles NAs base::mean.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the maximum/minimum value while handling NAs cleanly — max","text":"","code":"max(..., na.rm = FALSE)  min(..., na.rm = FALSE)"},{"path":"https://b-nilson.github.io/handyr/reference/max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the maximum/minimum value while handling NAs cleanly — max","text":"... numeric character vectors (see base::max). na.rm logical value indicating whether NA values removed.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/max.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the maximum/minimum value while handling NAs cleanly — max","text":"single value type ...","code":""},{"path":"https://b-nilson.github.io/handyr/reference/max.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the maximum/minimum value while handling NAs cleanly — max","text":"handles case values provided max/min NA, normally returns Inf/-Inf throws warning (see examples).","code":""},{"path":"https://b-nilson.github.io/handyr/reference/max.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the maximum/minimum value while handling NAs cleanly — max","text":"","code":"# Edge case where all values are NA base::max(c(NA, NA, NA)) # Returns NA #> [1] NA base::max(c(NA, NA, NA), na.rm = TRUE) # Returns -Inf and throws warning #> Warning: no non-missing arguments to max; returning -Inf #> [1] -Inf base::min(c(NA, NA, NA), na.rm = TRUE) # Returns Inf and throws warning #> Warning: no non-missing arguments to min; returning Inf #> [1] Inf max(c(NA, NA, NA)) # Returns NA #> [1] NA max(c(NA, NA, NA), na.rm = TRUE) # Returns NA #> [1] NA min(c(NA, NA, NA), na.rm = TRUE) # Returns NA #> [1] NA  # Example usage with typical dplyr pipeline data.frame(   x = c(1, 2, 3, NA, NA, NA),   y = c(\"a\", \"a\", \"a\", \"b\", \"b\", \"b\") ) |>   dplyr::group_by(y) |>   dplyr::summarise(     base_max_x = base::max(x, na.rm = TRUE), # for comparison     base_min_x = base::min(x, na.rm = TRUE), # for comparison     max_x = max(x, na.rm = TRUE),     min_x = min(x, na.rm = TRUE)   ) #> Warning: There were 2 warnings in `dplyr::summarise()`. #> The first warning was: #> ℹ In argument: `base_max_x = base::max(x, na.rm = TRUE)`. #> ℹ In group 2: `y = \"b\"`. #> Caused by warning in `base::max()`: #> ! no non-missing arguments to max; returning -Inf #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning. #> # A tibble: 2 × 5 #>   y     base_max_x base_min_x max_x min_x #>   <chr>      <dbl>      <dbl> <dbl> <dbl> #> 1 a              3          1     3     1 #> 2 b           -Inf        Inf    NA    NA"},{"path":"https://b-nilson.github.io/handyr/reference/mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the most common value — mode","title":"Get the most common value — mode","text":"mode determines statistical mode (common value) one vectors","code":""},{"path":"https://b-nilson.github.io/handyr/reference/mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the most common value — mode","text":"","code":"mode(..., na.rm = FALSE)"},{"path":"https://b-nilson.github.io/handyr/reference/mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the most common value — mode","text":"... numeric character vectors (see base::max). na.rm logical value indicating whether NA values removed.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the most common value — mode","text":"single value type ...","code":""},{"path":"https://b-nilson.github.io/handyr/reference/mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the most common value — mode","text":"","code":"mode(c(\"A\", \"B\", \"A\")) # Returns \"A\" #> [1] \"A\" mode(1:3, 3:6, 2:4, NA) # Returns 3 #> [1] 3 mode(1, 1:3, c(NA, NA, NA)) # Returns NA #> [1] NA mode(1, 1:3, c(NA, NA, NA), na.rm = TRUE) # Returns 1 #> [1] 1"},{"path":"https://b-nilson.github.io/handyr/reference/on_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Control what happens when an error/warning occurs — on_error","title":"Control what happens when an error/warning occurs — on_error","text":"on_error/on_warning provide simple way handle errors/warnings specifying value returned instead well message warning/error displayed instead.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/on_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control what happens when an error/warning occurs — on_error","text":"","code":"on_error(..., .return = NULL, .message = FALSE, .warn = FALSE)  on_warning(..., .return = NULL, .message = FALSE, .stop = FALSE)"},{"path":"https://b-nilson.github.io/handyr/reference/on_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control what happens when an error/warning occurs — on_error","text":"... Something run capture errors/warnings (). .return returned error/warning occurs. Default NULL .message logical value indicating error message displayed message instead. single character string provided, used message instead. Default FALSE .warn, .stop logical value indicating error/warning message displayed warning/error instead. single character string provided, used warning/error message instead. Default FALSE","code":""},{"path":"https://b-nilson.github.io/handyr/reference/on_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control what happens when an error/warning occurs — on_error","text":"output ... unless error/warning occurs, invisible(.return) instead.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/on_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control what happens when an error/warning occurs — on_error","text":"","code":"on_error(stop(\"test\"), .return = -1, .message = TRUE) #> Error in doTryCatch(return(expr), name, parentenv, handler): test on_error(read.csv(\"not_A_fil3.123\"), .return = NULL) #> Warning: cannot open file 'not_A_fil3.123': No such file or directory on_warning(warning(\"test\"), .return = -1, .message = TRUE) #> simpleWarning in doTryCatch(return(expr), name, parentenv, handler): test on_warning(base::max(NA, na.rm = TRUE), .return = NULL)"},{"path":"https://b-nilson.github.io/handyr/reference/read_from_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from a database — read_from_database","title":"Read data from a database — read_from_database","text":"read_from_database takes database connection table name, applies dplyr-based query, returns either lazy-table data frame query results.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/read_from_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from a database — read_from_database","text":"","code":"read_from_database(   db,   table_name,   query_fun = NULL,   collect = TRUE,   pull = NULL )"},{"path":"https://b-nilson.github.io/handyr/reference/read_from_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from a database — read_from_database","text":"db database connection path database file (sqlite duckdb file extension). table_name character string specifying table read . query_fun function taking single argument (data.frame-like object queried) returning data frame. Default NULL, apply query fun. dplyr functions implemented (see dbplyr::dbplyr details). (e.g. query_fun = \\(df) df |> dplyr::select(column1, column2)) Anything else beyond variable names needs prefaced !! (e.g. ... |>  dplyr::filter(month |> dplyr::(!!select_months[1], !!select_months[2]))). collect logical value indicating whether use dplyr::collect() fetch data database. overidden pull NULL. Default TRUE. pull single character string use dplyr::pull() pull column applying query_fun. Default NULL, pull columns.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/read_from_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from a database — read_from_database","text":"query_fun applied table table_name db : collect TRUE (default), returns tibble (data.frame) collect FALSE, returns lazy table query Unless pull column name, returns vector specified column","code":""},{"path":"https://b-nilson.github.io/handyr/reference/rolling.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function over a rolling window — rolling","title":"Apply a function over a rolling window — rolling","text":"rolling applies funtion (FUN) moving window (see .width .direction) element x using zoo::rollapply().","code":""},{"path":"https://b-nilson.github.io/handyr/reference/rolling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function over a rolling window — rolling","text":"","code":"rolling(   x,   FUN = mean,   ...,   .width = 3,   .direction = \"backward\",   .fill = NA,   .min_non_na = 0 )"},{"path":"https://b-nilson.github.io/handyr/reference/rolling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function over a rolling window — rolling","text":"x vector. FUN function applied window x. character string, converted function using get(), unless \"sum\", \"mean\", \"min\", \"max\" built-vectorized (faster) implementations. Default \"mean\". ... Additional arguments passed FUN. .width numeric value indicating width window. See zoo::rollapply() details. Default 3. .direction character string numeric value indicating direction window. Options \"backward\" (1), \"forward\" (-1), \"center\" (0). See align argument zoo::rollapply() details. Default \"backward\". .fill (Optional) single value used filling values outside window. See zoo::rollapply() details. Default NA. .min_non_na (Optional) single numeric value indicating minimum number observations required compute value. Default 0.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/rolling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function over a rolling window — rolling","text":"vector length x type output FUN.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/rolling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a function over a rolling window — rolling","text":"sure fill gaps x ensure x sorted, otherwise window may applied incorrectly. Values outside window replaced .fill. .min_non_na passed do_if_enough() apply FUN enough values present window.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/rolling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function over a rolling window — rolling","text":"","code":"x <- c(1, 2, 3, 4, 5) x |> rolling(mean, .width = 2) #> [1]  NA 1.5 2.5 3.5 4.5 x |> rolling(mean, .width = 2, .direction = \"forward\", .fill = -1) #> [1]  1.5  2.5  3.5  4.5 -1.0"},{"path":"https://b-nilson.github.io/handyr/reference/save_figure.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a ggplot2 figure for publishing — save_figure","title":"Save a ggplot2 figure for publishing — save_figure","text":"save_figure() wrapper around ggplot2::ggsave() saves high quality 5x6.5 figure default. can adjust sizing changing taller page_width.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/save_figure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a ggplot2 figure for publishing — save_figure","text":"","code":"save_figure(   gg,   out_path,   page_width = 6.5,   base_height = 5,   taller = 0,   units = \"in\",   quality = \"high\",   ... )"},{"path":"https://b-nilson.github.io/handyr/reference/save_figure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a ggplot2 figure for publishing — save_figure","text":"gg single ggplot object like save. out_path single character value indicating save plot (.e. \"./plots/my_figure_name.png\") page_width single numeric value indicating width page (minus margins) image intended . Default 6.5\". base_height single numeric value indicating height figure (+taller). Default 5\". taller single numeric value indicating much add/remove plot base_height. Default 0. units single character value equal \"\" (default) \"cm\" indicating units page_width, base_height, taller. quality single character value equal \"high\" (dpi = 300), \"medium\" (dpi = 200), \"low\" (dpi = 100) indicating output quality figure. single numeric value equal desired dpi. Text sizes may need adjusted relavant geoms/themes different quality levels. ... (Optional) addition arguments passed ggplot2::ggsave()","code":""},{"path":"https://b-nilson.github.io/handyr/reference/save_figure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a ggplot2 figure for publishing — save_figure","text":"invisibly returns gg","code":""},{"path":"https://b-nilson.github.io/handyr/reference/save_figure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a ggplot2 figure for publishing — save_figure","text":"","code":"gg <- ggplot2::ggplot() +   ggplot2::geom_line(     data = data.frame(x = 1:10, y = (0:9)^2),     ggplot2::aes(x, y)   ) # save_figure(gg, \"./test.png\", taller = 1)"},{"path":"https://b-nilson.github.io/handyr/reference/sf_as_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an sf object to a data.frame — sf_as_df","title":"Convert an sf object to a data.frame — sf_as_df","text":"function removes geometry sf object, effectively converting back data.frame.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/sf_as_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an sf object to a data.frame — sf_as_df","text":"","code":"sf_as_df(sf_obj, keep_coords = FALSE)"},{"path":"https://b-nilson.github.io/handyr/reference/sf_as_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an sf object to a data.frame — sf_as_df","text":"sf_obj object class sf, typically created sf::st_as_sf() keep_coords logical value indicating coordinates kept dropping geometry","code":""},{"path":"https://b-nilson.github.io/handyr/reference/sf_as_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an sf object to a data.frame — sf_as_df","text":"data.frame object without geometry column.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/sf_as_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an sf object to a data.frame — sf_as_df","text":"","code":"cities <- data.frame(   name = c(\"Nanaimo\", \"Port Moody\", \"Prince George\"),   x = c(-124.0531, -122.8519, -122.7949),   y = c(49.1633, 49.2844, 53.8934) ) cities_sf <- cities |>   sf::st_as_sf(coords = c(\"x\", \"y\"), crs = \"WGS84\") sf_as_df(cities_sf) #>            name #> 1       Nanaimo #> 2    Port Moody #> 3 Prince George sf_as_df(cities_sf, keep_coords = TRUE) #>            name         x       y   crs #> 1       Nanaimo -124.0531 49.1633 WGS84 #> 2    Port Moody -122.8519 49.2844 WGS84 #> 3 Prince George -122.7949 53.8934 WGS84"},{"path":"https://b-nilson.github.io/handyr/reference/silence.html","id":null,"dir":"Reference","previous_headings":"","what":"Silence unwanted output — silence","title":"Silence unwanted output — silence","text":"function wraps tryCatch suppresses following: errors warnings messages output print() output cat() output writeLines()","code":""},{"path":"https://b-nilson.github.io/handyr/reference/silence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Silence unwanted output — silence","text":"","code":"silence(   this_please,   errors = TRUE,   warnings = TRUE,   messages = TRUE,   output = FALSE )"},{"path":"https://b-nilson.github.io/handyr/reference/silence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Silence unwanted output — silence","text":"this_please code run silently. running multiple lines use {....} errors logical value indicating errors silenced. Default TRUE. warnings logical value indicating warnings silenced. Default TRUE. messages logical value indicating messages silenced. Default TRUE. output logical value indicating output print(), cat(), writeLines() silenced. Default TRUE.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/silence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Silence unwanted output — silence","text":"output this_please","code":""},{"path":"https://b-nilson.github.io/handyr/reference/silence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Silence unwanted output — silence","text":"","code":"silence(1 / 0) silence(warning(\"test\")) silence(message(\"test\")) silence(print(\"test\")) #> [1] \"test\" silence(cat(\"test\")) #> test silence(1 + \"a\")"},{"path":"https://b-nilson.github.io/handyr/reference/split_date_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a date range into multiple, shorter date ranges — split_date_range","title":"Split a date range into multiple, shorter date ranges — split_date_range","text":"Split date range multiple, shorter date ranges","code":""},{"path":"https://b-nilson.github.io/handyr/reference/split_date_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a date range into multiple, shorter date ranges — split_date_range","text":"","code":"split_date_range(date_range, max_duration = \"90 days\", as_list = FALSE)"},{"path":"https://b-nilson.github.io/handyr/reference/split_date_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a date range into multiple, shorter date ranges — split_date_range","text":"date_range length-2 vector Dates POSIXcts representing start end date range. max_duration string representing maximum duration split date range. Defaults \"90 days\". as_list logical indicating output list data frames (one split date range) single data frame split date ranges. Defaults FALSE.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/split_date_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a date range into multiple, shorter date ranges — split_date_range","text":"as_list = FALSE (default), data frame columns start end representing start end split date range. as_list = TRUE, list data frames, columns start end representing start end split date range.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/summarise_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Log overall and individual run time for repeated log_step() calls — summarise_logs","title":"Log overall and individual run time for repeated log_step() calls — summarise_logs","text":"summarise_logs takes list log entries log_step() outpus message summary time taken log call.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/summarise_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log overall and individual run time for repeated log_step() calls — summarise_logs","text":"","code":"summarise_logs(logs, save_to = NULL)"},{"path":"https://b-nilson.github.io/handyr/reference/summarise_logs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log overall and individual run time for repeated log_step() calls — summarise_logs","text":"logs list log_step() return values save_to character value indicating path text file save summary logs . Default NULL (save log file).","code":""},{"path":"https://b-nilson.github.io/handyr/reference/summarise_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log overall and individual run time for repeated log_step() calls — summarise_logs","text":"character vector indicating summary time taken log call","code":""},{"path":[]},{"path":"https://b-nilson.github.io/handyr/reference/summarise_logs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log overall and individual run time for repeated log_step() calls — summarise_logs","text":"","code":"logs <- log_step(\"Example usage of log_summarise\", header = TRUE) #> |--------------------   Example usage of log_summarise   --------------------| logs$step_one <- log_step(\"Step-1...\") #> 2025-10-28 17:38:37: Step-1... # Do something logs$step_two <- log_step(\"Step-2...\") #> 2025-10-28 17:38:37: Step-2... # Do something else logs$step_three <- log_step(\"Step-3...\") #> 2025-10-28 17:38:37: Step-3... # Do something else logs$done <- log_step(\"Complete\") #> 2025-10-28 17:38:37: Complete # Summarise run times and write to file summarise_logs(logs, save_to = tempfile()) #>  #> Total time: 0ms  #> --> Step-1...: 0ms #> --> Step-2...: 0ms #> --> Step-3...: 0ms"},{"path":"https://b-nilson.github.io/handyr/reference/swap.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap out values in a vector — swap","title":"Swap out values in a vector — swap","text":"swap provides simple way switch certain values vector. useful replacing NA's, Infinites, erroneous values.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/swap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap out values in a vector — swap","text":"","code":"swap(x, what, with)"},{"path":"https://b-nilson.github.io/handyr/reference/swap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap out values in a vector — swap","text":"x Vector values certain values swapped . One values replaced throughout x. single value replace throughout x.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/swap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap out values in a vector — swap","text":"vector x instances replaced ","code":""},{"path":[]},{"path":"https://b-nilson.github.io/handyr/reference/swap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap out values in a vector — swap","text":"","code":"swap(c(-20:20, NA), what = NA, with = -1) #>  [1] -20 -19 -18 -17 -16 -15 -14 -13 -12 -11 -10  -9  -8  -7  -6  -5  -4  -3  -2 #> [20]  -1   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17 #> [39]  18  19  20  -1 swap(c(-20:20, Inf), what = Inf, with = NA) #>  [1] -20 -19 -18 -17 -16 -15 -14 -13 -12 -11 -10  -9  -8  -7  -6  -5  -4  -3  -2 #> [20]  -1   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17 #> [39]  18  19  20  NA swap(c(-20:20), what = Inf, with = NA) #>  [1] -20 -19 -18 -17 -16 -15 -14 -13 -12 -11 -10  -9  -8  -7  -6  -5  -4  -3  -2 #> [20]  -1   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17 #> [39]  18  19  20"},{"path":"https://b-nilson.github.io/handyr/reference/truncate.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncate a numeric vector to a certain number of decimal places — truncate","title":"Truncate a numeric vector to a certain number of decimal places — truncate","text":"Truncate numeric vector certain number decimal places","code":""},{"path":"https://b-nilson.github.io/handyr/reference/truncate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncate a numeric vector to a certain number of decimal places — truncate","text":"","code":"truncate(x, digits = 0)"},{"path":"https://b-nilson.github.io/handyr/reference/truncate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncate a numeric vector to a certain number of decimal places — truncate","text":"x numeric vector truncated digits single numeric value indicating number decimal places round Default 0","code":""},{"path":"https://b-nilson.github.io/handyr/reference/truncate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncate a numeric vector to a certain number of decimal places — truncate","text":"numeric vector x truncated digits decimal places","code":""},{"path":"https://b-nilson.github.io/handyr/reference/write_to_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data to a database — write_to_database","title":"Write data to a database — write_to_database","text":"Write data database, options insert new data, update existing data, create new table.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/write_to_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data to a database — write_to_database","text":"","code":"write_to_database(   db,   table_name,   new_data,   primary_keys,   unique_indexes = NULL,   insert_new = TRUE,   update_duplicates = FALSE )"},{"path":"https://b-nilson.github.io/handyr/reference/write_to_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data to a database — write_to_database","text":"db database connection path database (sqlite duckdb file extension). table_name character string specifying table write . new_data data frame write table. primary_keys character vector column names use primary key, main identifier individual rows table. Multiple columns can specified uniqueness assessed based combination columns. (e.g. primary_keys = c(\"col1\", \"col2\") add primary key combination col1 col2). unique_indexes list character vector(s) column names use unique indexes. added table, addition primary key. Multiple columns can specified uniqueness assessed based combination columns. (e.g. unique_indexes = list(c(\"col1\", \"col2\")) add unique index combination col1 col2.). NULL (default), unique indexes added. insert_new logical value indicating new data inserted existing table. FALSE, new data inserted, existing rows updated update_duplicates = TRUE. update_duplicates logical value indicating existing rows updated new data. FALSE, existing rows updated. new data inserted insert_new = TRUE.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/write_to_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write data to a database — write_to_database","text":"invisible db connection.","code":""},{"path":"https://b-nilson.github.io/handyr/reference/write_to_database.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write data to a database — write_to_database","text":"create table insert new_data table already exist. Otherwise: insert_new = TRUE, new_data inserted existing table. update_duplicates = TRUE, existing data updated overlap new_data.","code":""}]
